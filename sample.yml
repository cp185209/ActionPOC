name: test-build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-build:
    name: Test & Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          npm install
          git config --global user.name "github"
          git config --global user.email "github@users.noreply.github.com"

      - name: Test
        run: npm run test

      # Run and commit the release.
      # Output the new version to tag the docker image.
      - name: Create release
        id: release
        run: |
          npm run release
          VERSION=$(cat version.txt)
          echo "::set-output name=version::$VERSION"

      - name: Login to github container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # Image should be different for each service.
          images: ghcr.io/HarryRosen/hr-orders-service
          tags: |
            type=semver,pattern={{version}},value=${{ steps.release.outputs.version}}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.release.outputs.version}}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Build & push image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Push release tag
        if: ${{ github.event_name != 'pull_request' }}
        id: release-push
        run: git push --follow-tags
